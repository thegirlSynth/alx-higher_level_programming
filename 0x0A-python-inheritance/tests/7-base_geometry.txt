The ``BaseGeometry`` class
===========================

This is a basic geometry class from which other geometry shapes inherit.

The following are tests for the BaseGeometry class and `integer_validator`
function.

Importing the class;
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Creating an instance;

    >>> bg = BaseGeometry()

Test Case: Correct Area Output

    >>> print(bg.area())
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented


Test Case: Value is an integer and is greater than 0

    >>> bg.integer_validator("my_int", 12)

Test Case: Value is less than or equal to 0

    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0

    >>> bg.integer_validator("age", -2)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0

Test Case: Value is not an integer

    >>> bg.integer_validator("age", "think")
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

    >>> bg.integer_validator("age", True)
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

    >>> bg.integer_validator("age", (1, 2))
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

    >>> bg.integer_validator("age", [1, 2])
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

    >>> bg.integer_validator("age", {13, 12})
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

