The `print_square` function
=============================
Prints a square with the character `#`. 

=> Prototype: def print_square(size):
=> size is the size length of the square
=> size must be an integer, otherwise a TypeError exception
   with the message `size must be an integer` is raised.
=> if size is less than 0, a ValueError exception with the message
   `size must be >= 0` is raised.
=> if size is a float and is less than 0, a TypeError exception with the message
   `size must be an integer` is raised.


------------------------------
Importing the function;
	>>> print_square = __import__('4-print_square').print_square


CASE 1: Size is an integer and greater than 0
---------------------------------------------
	>>> print_square(3)
	###
	###
	###
 
CASE 2: Size is a float and greater than 0
---------------------------------------------
	>>> print_square(3.0)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

CASE 3: Size is an integer and less than 0
------------------------------------------
	>>> print_square(-2)
	Traceback (most recent call last):
	...
	ValueError: size must be >= 0

CASE 4: Size is a float and less than 0
------------------------------------------
	>>> print_square(-2.0)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

CASE 5: Missing one required argument
---------------------------------------
	>>> print_square()
	Traceback (most recent call last):
	...
	TypeError: print_square() missing 1 required positional argument: 'size'
